<?php

class ParserAbstractSingle_MockTester extends ParserAbstractSingle {
	public function __construct($GPSdata, $useGetCurrentPace) {
		parent::__construct('');

		if ($useGetCurrentPace) {
			$num = count($GPSdata['km']);
			$keys = array_keys($GPSdata);

			for ($i = 0; $i < $num; ++$i) {
				foreach ($keys as $key) {
					$this->gps[$key][] = $GPSdata[$key][$i];
				}

			}
		} else {
			$this->gps = array_merge($this->gps, $GPSdata);
		}
	}

	public function parse() {
		$this->setGPSarrays();
	}
}


/**
 * Generated by hand
 */
class ParserAbstractSingleTest extends PHPUnit_Framework_TestCase {

	public function testGetCurrentPace() {
		$Parser = new ParserAbstractSingle_MockTester(array(
			'km'		=> array(0,  0, 0.1, 0.1, 0.1, 0.3, 0.5, 0.5, 0.5, 1.0),
			'time_in_s'	=> array(5, 10,  20,  31,  39,  58,  82, 120, 190, 260)
		), true);
		$Parser->parse();

		$this->assertEquals( array(0,  0, 0.1, 0.1, 0.1, 0.3, 0.5, 0.5, 0.5, 1.0), $Parser->object()->getArrayDistance() );
		$this->assertEquals( array(5, 10,  20,  31,  39,  58,  82, 120, 190, 260), $Parser->object()->getArrayTime() );
	}

	public function testSetPaceFromDistanceAndTime() {
		$Parser = new ParserAbstractSingle_MockTester(array(
			'km'		=> array(0,  0, 0.1, 0.1, 0.1, 0.3, 0.5, 0.5, 0.5, 1.0),
			'time_in_s'	=> array(5, 10,  20,  31,  39,  58,  82, 120, 190, 260)
		), false);
		$Parser->parse();

		$this->assertEquals( array(0,  0, 0.1, 0.1, 0.1, 0.3, 0.5, 0.5, 0.5, 1.0), $Parser->object()->getArrayDistance() );
		$this->assertEquals( array(5, 10,  20,  31,  39,  58,  82, 120, 190, 260), $Parser->object()->getArrayTime() );
	}

}
