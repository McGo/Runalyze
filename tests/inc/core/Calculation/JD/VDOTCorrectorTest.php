<?php

namespace Runalyze\Calculation\JD;

use PDO;
use Runalyze\Model\Activity;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2014-11-30 at 11:21:45.
 */
class VDOTCorrectorTest extends \PHPUnit_Framework_TestCase {

	protected function setUp() {
		VDOTCorrector::setGlobalFactor(1);
	}

	protected function tearDown() {
		VDOTCorrector::setGlobalFactor(1);
	}

	public function testSimpleFactor() {
		$Corrector = new VDOTCorrector(0.95);

		$this->assertEquals(0.95, $Corrector->factor());
	}

	public function testApply() {
		$Corrector = new VDOTCorrector(0.9);
		$VDOT = new VDOT(50);
		$Corrector->applyTo($VDOT);

		$this->assertEquals(45, $VDOT->value());
	}

	public function testGlobalFactor() {
		VDOTCorrector::setGlobalFactor(0.5);
		$Corrector = new VDOTCorrector;

		$this->assertEquals(0.5, $Corrector->factor());
	}

	public function testFromActivity() {
		$Corrector = new VDOTCorrector;
		$Corrector->fromActivity(
			$Activity = new Activity\Entity(array(
				Activity\Entity::VDOT_BY_TIME => 45,
				Activity\Entity::VDOT => 50
			))
		);

		$this->assertEquals(0.9, $Corrector->factor());
	}

	public function testFromEmptyActivity() {
		$Corrector = new VDOTCorrector;
		$Corrector->fromActivity(
			$Activity = new Activity\Entity(array(
				Activity\Entity::VDOT_BY_TIME => 45
			))
		);

		$this->assertEquals(1, $Corrector->factor());
	}

	public function testFromDatabase() {
		$PDO = new PDO('sqlite::memory:');
		$PDO->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
		$PDO->exec('CREATE TABLE IF NOT EXISTS `'.PREFIX.'training` (
			`accountid` int(10),
			`typeid` int(10),
			`vdot` decimal(5,2),
			`vdot_by_time` decimal(5,2)
			);
		');
		$PDO->exec('INSERT INTO `'.PREFIX.'training` VALUES(1, 3,  0, 90)'); // empty
		$PDO->exec('INSERT INTO `'.PREFIX.'training` VALUES(1, 3, 50, 25)'); // 0.5
		$PDO->exec('INSERT INTO `'.PREFIX.'training` VALUES(1, 3, 50, 45)'); // 0.9
		$PDO->exec('INSERT INTO `'.PREFIX.'training` VALUES(1, 3,100, 80)'); // 0.8, best vdot_by_time
		$PDO->exec('INSERT INTO `'.PREFIX.'training` VALUES(2, 3, 90, 90)'); // 1.0, other account
		$PDO->exec('INSERT INTO `'.PREFIX.'training` VALUES(1, 5, 90, 90)'); // 1.0, other type

		$Corrector = new VDOTCorrector;
		$Corrector->fromDatabase($PDO, 1, 3);

		$PDO->exec('DROP TABLE `'.PREFIX.'training`');

		$this->assertEquals(0.9, $Corrector->factor());
	}

}
