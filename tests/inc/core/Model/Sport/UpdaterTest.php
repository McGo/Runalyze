<?php

namespace Runalyze\Model\Sport;

use PDO;

/**
 * Generated by hand
 */
class UpdaterTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var \PDO
	 */
	protected $PDO;

	protected function setUp() {
		$this->PDO = new PDO('sqlite::memory:');
		$this->PDO->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
		$this->PDO->exec('CREATE TABLE IF NOT EXISTS `'.PREFIX.'sport` (
			`id` INTEGER PRIMARY KEY AUTOINCREMENT,
			`name` VARCHAR(50) NOT NULL,
			`img` VARCHAR(50) NOT NULL,
			`short` TINYINT NOT NULL,
			`kcal` SMALLINT NOT NULL,
			`HFavg` SMALLINT NOT NULL,
			`distances` SMALLINT NOT NULL,
			`speed` VARCHAR(10) NOT NULL,
			`power` TINYINT NOT NULL,
			`outside` TINYINT NOT NULL,
			`accountid` INTEGER NOT NULL
			);
		');
	}

	protected function tearDown() {
		$this->PDO->exec('DROP TABLE `'.PREFIX.'sport`');
	}

	public function testSimpleUpdate() {
		$Inserter = new Inserter($this->PDO);
		$Inserter->setAccountID(1);
		$Inserter->insert(new Object(array(
			Object::NAME => 'Sport name',
			Object::CALORIES_PER_HOUR => 700
		)));

		$Sport = new Object($this->PDO->query('SELECT * FROM `'.PREFIX.'sport` WHERE `id`='.$Inserter->insertedID())->fetch(PDO::FETCH_ASSOC));
		$Sport->set(Object::CALORIES_PER_HOUR, 0);

		$Changed = clone $Sport;
		$Changed->set(Object::NAME, 'New sport name');

		$Updater = new Updater($this->PDO, $Changed, $Sport);
		$Updater->setAccountID(1);
		$Updater->update();

		$Result = new Object($this->PDO->query('SELECT * FROM `'.PREFIX.'sport` WHERE `id`='.$Inserter->insertedID())->fetch(PDO::FETCH_ASSOC));
		$this->assertEquals('New sport name', $Result->name());
		$this->assertEquals(700, $Result->caloriesPerHour());
	}

}
